---
import Container from "../../components/shared/Container.astro";
import Title from "../../components/shared/Title.astro";
---
<section class="py-4">
    <Container className="space-y-6">
        <div class="text-center flex items-center justify-center gap-4">
            <div class="h-[1px] w-24 bg-heading-2"></div>
            <Title>Trusted by</Title>
            <div class="h-[1px] w-24 bg-heading-2"></div>
        </div>
        <div class="flex justify-center w-full overflow-hidden">
            <div class="w-full md:w-[80vw] flex justify-between items-center gap-2">
                <div class="p-2 rounded-lg bg-body h-12 sm:h-16 md:h-20 w-[16vw] md:w-[calc(80vw/5-2.5rem)] flex items-center justify-center min-w-[60px]">
                    <img 
                        src="/images/ShopifyLightTheme.png" 
                        data-light-src="/images/ShopifyLightTheme.png" 
                        data-dark-src="/images/ShopifyDarkTheme.png" 
                        alt="Shopify Theme" 
                        class="theme-aware-image w-full h-full object-contain"
                    >
                </div>
                
                <div class="p-2 rounded-lg bg-body h-12 sm:h-16 md:h-20 w-[16vw] md:w-[calc(80vw/5-2.5rem)] flex items-center justify-center min-w-[60px]">
                    <img 
                        src="/images/VoileChic-noBG.png" 
                        data-light-src="/images/VoileChic.jpg" 
                        data-dark-src="/images/VoileChic-noBG-dark.png" 
                        alt="Voile Chic" 
                        class="theme-aware-image w-full h-full object-contain"
                    >
                </div>
                
                <div class="p-2 rounded-lg bg-body h-12 sm:h-16 md:h-20 w-[16vw] md:w-[calc(80vw/5-2.5rem)] flex items-center justify-center min-w-[60px]">
                    <img 
                        src="/images/SocialSnowball-noBG.png" 
                        data-light-src="/images/SocialSnowball-noBG.png" 
                        data-dark-src="/images/SocialSnowball-noBG.png" 
                        alt="Social Snowball" 
                        class="theme-aware-image w-full h-full object-contain"
                    >
                </div>
                
                <div class="p-2 rounded-lg bg-body h-12 sm:h-16 md:h-20 w-[16vw] md:w-[calc(80vw/5-2.5rem)] flex items-center justify-center min-w-[60px]">
                    <img 
                        src="/images/EvesCycle.png" 
                        data-light-src="/images/EvesCycle.png" 
                        data-dark-src="/images/EvesCycle.png" 
                        alt="Eve's Cycle" 
                        class="theme-aware-image w-full h-full object-contain"
                    >
                </div>
                
                <div class="p-2 rounded-lg bg-body h-12 sm:h-16 md:h-20 w-[16vw] md:w-[calc(80vw/5-2.5rem)] flex items-center justify-center min-w-[60px]">
                    <img 
                        src="/images/RefunnelLightTheme.png" 
                        data-light-src="/images/RefunnelLightTheme.png" 
                        data-dark-src="/images/RefunnelDarkTheme.png" 
                        alt="Refunnel Theme" 
                        class="theme-aware-image w-full h-full object-contain"
                    >
                </div>
            </div>
        </div>
    </Container>
</section>
<script>
    // Fonction pour mettre à jour toutes les images en fonction du thème
    function updateThemeAwareImages() {
        const isDark = document.documentElement.classList.contains('dark');
        const themeAwareImages = document.querySelectorAll('.theme-aware-image');
        
        themeAwareImages.forEach(image => {
            const currentSrc = image.getAttribute('src') || '';
            const lightSrc = image.getAttribute('data-light-src') || '';
            const darkSrc = image.getAttribute('data-dark-src') || '';
            
            if (lightSrc && darkSrc) {
                image.setAttribute('src', isDark ? darkSrc : lightSrc);
            }
        });
    }

    // Observer les changements de thème
    const observer = new MutationObserver((mutations) => {
        mutations.forEach((mutation) => {
            if (mutation.attributeName === 'class') {
                updateThemeAwareImages();
            }
        });
    });

    // Démarrer l'observation
    observer.observe(document.documentElement, {
        attributes: true,
        attributeFilter: ['class']
    });

    // Mettre à jour les images au chargement initial
    updateThemeAwareImages();
</script>