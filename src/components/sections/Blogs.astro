---
import Container from "../shared/Container.astro";
import BlogCard from "../shared/BlogCard.astro";

const categories = [
    "All",
    "Influencer Marketing",
    "Affiliate Programs",
    "Growth Strategies",
    "Case Studies",
    "Social Media",
    "Analytics"
];

const posts = [
    {
        title: "10 Strategies to Scale Your Affiliate Program",
        category: "Affiliate Programs",
        excerpt: "Learn the proven methods to grow your affiliate program and increase revenue through strategic partnerships.",
        image: "https://images.unsplash.com/photo-1552664730-d307ca884978?q=80&w=2070",
        date: "Jan 15, 2025",
        readTime: "8 min"
    }
];
---

<section class="py-16 bg-body">
    <Container>
        <div class="text-center mb-12">
            <h1 class="text-4xl font-bold text-heading-1 mb-4">Latest Articles</h1>
            <p class="text-heading-3 max-w-2xl mx-auto">
                Discover the latest trends, strategies, and success stories in influencer marketing and affiliate programs.
            </p>
        </div>

        <!-- Search bar -->
        <div class="max-w-md mx-auto mb-8">
            <div class="relative">
                <input 
                    type="text" 
                    id="search-input"
                    placeholder="Search articles..."
                    class="w-full px-4 py-2 rounded-full border border-box-border bg-box-bg text-heading-2 focus:outline-none focus:ring-2 focus:ring-primary/50"
                />
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 absolute right-4 top-1/2 transform -translate-y-1/2 text-heading-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                </svg>
            </div>
        </div>

        <div class="flex flex-wrap gap-4 justify-center mb-12">
            {categories.map((category, index) => (
                <button 
                    class={`px-4 py-2 rounded-full border transition-all duration-300 text-sm
                    ${index === 0 
                        ? 'bg-primary text-white border-primary hover:bg-primary/90' 
                        : 'border-box-border text-heading-2 hover:border-heading-3'}`}
                    data-category={category}
                >
                    {category}
                </button>
            ))}
        </div>

        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6" id="posts-container">
            {posts.map((post) => (
                <BlogCard {...post} />
            ))}
        </div>

        <div class="text-center mt-12 space-y-4">
            <button 
                id="load-more"
                class="px-6 py-3 rounded-full bg-primary text-white hover:bg-primary/90 transition-colors duration-300"
            >
                Load More Articles
            </button>
            <button 
                id="show-less"
                class="px-6 py-3 rounded-full bg-box-bg text-heading-2 hover:bg-box-border transition-colors duration-300 hidden"
            >
                Show Less
            </button>
        </div>
    </Container>
</section>

<script>
    const filterButtons = document.querySelectorAll('[data-category]');
    const searchInput = document.getElementById('search-input') as HTMLInputElement | null;
    const loadMoreButton = document.getElementById('load-more');
    const showLessButton = document.getElementById('show-less');
    
    if (searchInput && loadMoreButton && showLessButton) {
        // Search functionality
        searchInput.addEventListener('input', (e) => {
            const target = e.target as HTMLInputElement;
            const searchTerm = target.value.toLowerCase();
            const articles = document.querySelectorAll('article');
            
            articles.forEach((article) => {
                const title = article.querySelector('h3')?.textContent?.toLowerCase() || '';
                const excerpt = article.querySelector('p')?.textContent?.toLowerCase() || '';
                const category = article.querySelector('span')?.textContent?.toLowerCase() || '';
                
                if (title.includes(searchTerm) || excerpt.includes(searchTerm) || category.includes(searchTerm)) {
                    article.style.display = 'block';
                } else {
                    article.style.display = 'none';
                }
            });
        });

        // Category filtering functionality
        filterButtons.forEach((button) => {
            button.addEventListener('click', () => {
                searchInput.value = '';
                
                filterButtons.forEach((btn) => {
                    btn.classList.remove('bg-primary', 'text-white', 'border-primary');
                    btn.classList.add('border-box-border', 'text-heading-2');
                });

                button.classList.remove('border-box-border', 'text-heading-2');
                button.classList.add('bg-primary', 'text-white', 'border-primary');

                const category = button.getAttribute('data-category');
                const articles = document.querySelectorAll('article');
                
                articles.forEach((article) => {
                    const articleCategory = article.querySelector('[class*="bg-primary"]')?.textContent?.trim();
                    if (category === 'All' || category === articleCategory) {
                        article.style.display = 'block';
                    } else {
                        article.style.display = 'none';
                    }
                });
            });
        });

        // Load More/Show Less functionality
        loadMoreButton.addEventListener('click', () => {
            showLessButton.classList.remove('hidden');
            loadMoreButton.style.display = 'none';
        });

        showLessButton.addEventListener('click', () => {
            loadMoreButton.style.display = 'inline-block';
            showLessButton.classList.add('hidden');
            
            const blogSection = document.querySelector('section');
            if (blogSection) {
                blogSection.scrollIntoView({ behavior: 'smooth' });
            }
        });
    }
</script>