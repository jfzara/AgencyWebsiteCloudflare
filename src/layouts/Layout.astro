---
import Footer from "../components/elements/Footer.astro";
import Navbar from "../components/elements/Navbar.astro";

interface Props {
    title: string;
}

const { title } = Astro.props;
const fontUrl = 'https://fonts.googleapis.com/css2?family=Raleway:wght@300;400;500;600;700&display=swap';
---

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width" />
        <link rel="preload" as="image" href="/images/Black Logo No Background.webp" type="image/webp" />
        <link rel="preload" as="image" href="/images/White Logo No Background.webp" type="image/webp" />
        <link rel="icon" type="image/webp" href="/images/Black Logo No Background.webp" media="(prefers-color-scheme: light)" />
        <link rel="icon" type="image/webp" href="/images/White Logo No Background.webp" media="(prefers-color-scheme: dark)" />
        <meta name="generator" content={Astro.generator} />
        <meta name="description" content="Influencers & Affiliates Marketing Agency">
        <title>Livano Agency - Affiliate marketing</title>
        
        <!-- Préchargement optimisé des polices -->
        <link 
            rel="preload" 
            href={fontUrl}
            as="style"
            crossorigin="anonymous"
            onload="this.onload=null;this.rel='stylesheet'"
        />
        <noscript>
            <link 
                href={fontUrl}
                rel="stylesheet"
                type="text/css"
                crossorigin="anonymous"
            />
        </noscript>

        <!-- Styles critiques -->
        <style is:inline>
            :root {
                --color-bg: 255 255 255;
                --color-border: 255 255 255;
                --color-box: 255 255 255;
                --box-border: 229 231 235;
                --box-sd: 226 232 240 / 0.5;
                --heading-1: 23 37 84;
                --heading-2: 31 41 55;
                --heading-3: 55 65 81;
            }

            .dark {
                --color-bg: 3 7 18;
                --color-box: 17 24 39;
                --box-border: 243 244 246/0.1;
                --box-sd: transparent;
                --heading-1: 255 255 255;
                --heading-2: 243 244 246;
                --heading-3: 209 213 219;
            }

            body {
                font-family: "Raleway", system-ui, -apple-system, sans-serif;
                margin: 0;
                padding: 0;
                text-rendering: optimizeLegibility;
                -webkit-font-smoothing: antialiased;
            }

            @media (prefers-reduced-motion: no-preference) {
                html {
                    scroll-behavior: smooth;
                }
            }
        </style>
    </head>
    <body class="overflow-hidden overflow-y-auto bg-body min-h-screen flex flex-col">
        <Navbar />
        <main class="relative z-10 pt-0 flex-1 flex flex-col">
            <slot />
        </main>
        <Footer />
    </body>
</html>

<script>
    // Regroupement des scripts pour réduire les requêtes
    const initTheme = () => {
        const switchTheme = document.querySelector("[data-switch-theme]") as HTMLButtonElement;
        
        if (
            localStorage.getItem("appTheme") === "dark" ||
            (!("appTheme" in localStorage) &&
                window.matchMedia("(prefers-color-scheme: dark)").matches)
        ) {
            document.documentElement.classList.add("dark");
        } else {
            document.documentElement.classList.remove("dark");
        }

        if (switchTheme) {
            switchTheme.addEventListener("click", (e) => {
                e.preventDefault();
                const doc = document.documentElement;
                if (doc) {
                    const isDark = doc.classList.contains("dark");
                    doc.classList.toggle("dark");
                    localStorage.setItem("appTheme", isDark ? "light" : "dark");
                }
            });
        }
    };

    const initNav = () => {
        const toggleMenu = document.querySelector("[data-toggle-nav]") as HTMLButtonElement;
        const navbar = document.querySelector("[data-navbar]") as HTMLDivElement;
        const overlayNav = document.querySelector("[data-nav-overlay]") as HTMLDivElement;

        const closeNav = () => {
            toggleMenu?.setAttribute("data-open-nav", "false");
            overlayNav?.setAttribute("data-is-visible", "false");
            document.body.classList.remove("!overflow-y-hidden");
            navbar.style.height = "0px";
        };

        if (toggleMenu) {
            toggleMenu.addEventListener("click", e => {
                e.preventDefault();
                const isOpen = toggleMenu.getAttribute("data-open-nav") === "true";
                toggleMenu.setAttribute("data-open-nav", (!isOpen).toString());
                overlayNav?.setAttribute("data-is-visible", (!isOpen).toString());
                document.body.classList.toggle("!overflow-y-hidden", !isOpen);
                navbar.style.height = isOpen ? "0px" : `${navbar.scrollHeight}px`;
            });

            navbar?.addEventListener("click", closeNav);
            overlayNav?.addEventListener("click", closeNav);
        }
    };

    // Initialisation différée pour améliorer les performances
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', () => {
            requestIdleCallback(() => {
                initTheme();
                initNav();
            });
        });
    } else {
        requestIdleCallback(() => {
            initTheme();
            initNav();
        });
    }
</script>

<style is:global>
    [data-toggle-nav][data-open-nav="true"] #line1 {
        transform: translateY(0.375rem) rotate(40deg);
    }

    [data-toggle-nav][data-open-nav="true"] #line2 {
        transform: scaleX(0);
        opacity: 0;
    }

    [data-toggle-nav][data-open-nav="true"] #line3 {
        transform: translateY(-0.375rem) rotate(-40deg);
    }

    [data-nav-overlay][data-is-visible="true"] {
        visibility: visible;
        display: flex;
    }

    @media (prefers-reduced-motion: reduce) {
        *, ::before, ::after {
            animation-duration: 0.01ms !important;
            animation-iteration-count: 1 !important;
            transition-duration: 0.01ms !important;
            scroll-behavior: auto !important;
        }
    }
</style>