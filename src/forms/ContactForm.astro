---
import Button from '../components/shared/Button.astro';
import { Resend } from 'resend';

const resend = new Resend(import.meta.env.RESEND_API_KEY);
let errorMessage = '';
let successMessage = '';

if (Astro.request.method === 'POST') {
    try {
        const data = await Astro.request.formData();
        
        // Vérification du honeypot
        const honeypot = data.get('website')?.toString();
        if (honeypot) {
            throw new Error('Bot detected');
        }
        
        const name = data.get('name')?.toString() || '';
        const email = data.get('email')?.toString() || '';
        const company = data.get('company')?.toString() || '';
        const phone = data.get('phone')?.toString() || '';
        const message = data.get('message')?.toString() || '';
        const turnstileResponse = data.get('cf-turnstile-response')?.toString();

        if (!turnstileResponse) {
            throw new Error('Please complete the security check');
        }

        const verifyUrl = 'https://challenges.cloudflare.com/turnstile/v0/siteverify';
        const formData = new URLSearchParams();
        formData.append('secret', import.meta.env.TURNSTILE_SECRET_KEY);
        formData.append('response', turnstileResponse);
        formData.append('remoteip', Astro.clientAddress);

        const result = await fetch(verifyUrl, {
            method: 'POST',
            body: formData,
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            }
        });

        const outcome = await result.json();
        if (!outcome.success) {
            throw new Error('Security check failed. Please try again.');
        }

        const subject = company 
            ? `[Client Lead] Website Contact - ${company} | ${name}`
            : `[Client Lead] Website Contact - ${name}`;

        const { data: emailResponse, error } = await resend.emails.send({
            from: 'contact@livanoagency.com',
            to: ['livano@livanoagency.com'],
            replyTo: email,
            subject,
            html: `
                <h2>New Contact Message</h2>
                <p><strong>Name:</strong> ${name}</p>
                <p><strong>Email:</strong> ${email}</p>
                ${company ? `<p><strong>Company:</strong> ${company}</p>` : ''}
                ${phone ? `<p><strong>Phone:</strong> ${phone}</p>` : ''}
                <p><strong>Message:</strong></p>
                <p>${message}</p>
            `,
            tags: [{
                name: 'source',
                value: 'contact_form'
            }]
        });

        if (error) {
            console.error('Error sending email:', error);
            errorMessage = 'An error occurred while sending your message';
        } else {
            successMessage = 'Message sent successfully!';
        }
    } catch (error) {
        console.error('Error:', error);
        errorMessage = error instanceof Error ? error.message : 'An error occurred while sending your message.';
    }
}
---

<div class="w-[73%] mx-auto">
    <form id="contactForm" class="mt-3 relative" method="post" lang="en">
        <!-- Champ honeypot -->
        <div class="hidden" aria-hidden="true" style="display: none;">
            <input
                type="text"
                name="website"
                tabindex="-1"
                autocomplete="off"
                class="hidden"
            />
        </div>

        {errorMessage && (
            <div class="absolute -top-5 left-0 right-0 flex justify-center" role="alert">
                <div class="inline-flex items-center gap-1.5 px-2.5 py-0.5 rounded-full text-xs bg-red-50 dark:bg-red-500/5 text-red-600 dark:text-red-400 border border-red-100 dark:border-red-500/10">
                    <svg xmlns="http://www.w3.org/2000/svg" class="w-3 h-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                    <span>{errorMessage}</span>
                </div>
            </div>
        )}

        {successMessage && (
            <div class="absolute -top-5 left-0 right-0 flex justify-center" role="alert">
                <div class="inline-flex items-center gap-1 px-2 py-0.5 rounded-full text-xs success-container">
                    <span class="text-primary dark:text-blue-400 font-medium">Sent</span>
                    <svg xmlns="http://www.w3.org/2000/svg" class="w-3 h-3 text-primary dark:text-blue-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                    </svg>
                </div>
            </div>
        )}

        <div class="grid grid-cols-1 lg:grid-cols-2 gap-2.5 md:gap-3">
            <div class="form-group col-span-1 lg:col-span-2 ">
                <input 
                    type="text" 
                    name="name" 
                    lang="en"
                    class="w-full px-3 py-1.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary dark:bg-box-bg dark:border-box-border dark:text-heading-2 " 
                    placeholder="*Full Name" 
                    required
                    minlength="2"
                    oninvalid="this.setCustomValidity('Please enter your full name (minimum 2 letters.)')"
                    oninput="this.setCustomValidity('')"
                />
            </div>
            <div class="form-group col-span-1 lg:col-span-2">
                <input 
                    type="email" 
                    name="email"
                    lang="en" 
                    class="w-full px-3 py-1.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary dark:bg-box-bg dark:border-box-border dark:text-heading-2" 
                    placeholder="*Email" 
                    required
                    oninvalid="this.setCustomValidity('Please enter a valid email address')"
                    oninput="this.setCustomValidity('')"
                />
            </div>
            <div class="form-group col-span-1 lg:col-span-2">
                <input 
                    type="text" 
                    name="company" 
                    lang="en"
                    class="w-full px-3 py-1.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary dark:bg-box-bg dark:border-box-border dark:text-heading-2" 
                    placeholder="Company name (Optional)" 
                />
            </div>
            <div class="form-group col-span-1 lg:col-span-2">
                <input 
                    type="tel" 
                    name="phone"
                    lang="en" 
                    class="w-full px-3 py-1.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary dark:bg-box-bg dark:border-box-border dark:text-heading-2" 
                    placeholder="Phone Number (Optional)" 
                    pattern="[0-9+\-\(\)\s]*"
                    oninvalid="this.setCustomValidity('Please use only numbers and these symbols: + - ( )')"
                    oninput="this.setCustomValidity('')"
                />
            </div>
            <div class="form-group col-span-1 xl:col-span-2">
                <label class="block text-sm font-medium text-heading-2 dark:text-heading-2 mb-0.5">Message</label>
                <textarea 
                    name="message"
                    lang="en" 
                    rows="3" 
                    maxlength="1000"
                    class="w-full px-3 py-1.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary dark:bg-box-bg dark:border-box-border dark:text-heading-2 resize-y min-h-[60px] max-h-[200px]" 
                    placeholder="Message"
                    required
                    oninvalid="this.setCustomValidity('Please enter your message')"
                    oninput="this.setCustomValidity('')"
                ></textarea>
                <div class="text-xs text-gray-500 mt-0.5 text-right message-length"></div>
            </div>
        </div>

<!-- Turnstile widget -->
<div class="mt-4 flex justify-center">
    <div id="turnstile-widget" 
         class="cf-turnstile" 
         data-sitekey={import.meta.env.TURNSTILE_SITE_KEY}
         data-callback="onTurnstileSuccess"
         data-appearance="always"
         data-language="en"
         data-size="normal"
         data-theme="auto"
         data-retry="auto">
    </div>
</div>

<!-- Ajoutez ce script juste après le widget -->
<script is:inline>
    function onTurnstileSuccess(token) {
        console.log("Turnstile validated");
        const errorMessage = document.querySelector('.turnstile-error');
        if (errorMessage) {
            errorMessage.remove();
        }
    }

    window.onloadTurnstileCallback = function() {
        if (typeof turnstile !== 'undefined') {
            turnstile.ready(function () {
                turnstile.render('#turnstile-widget');
            });
        }
    };
</script>

<div class="mt-3 flex justify-center">
    <Button variant={"primary"} type="submit">
        <span class="text-white relative z-[5]">Submit</span>
    </Button>
</div>

<!-- Add Turnstile script -->
<script src="https://challenges.cloudflare.com/turnstile/v0/api.js" async defer></script>

<script>
    import "../scripts/contactFormHandler.js";
</script>